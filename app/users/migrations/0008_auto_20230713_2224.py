# Generated by Django 4.2.1 on 2023-07-13 14:08
import django.db.models.deletion
from django.contrib.auth import get_user_model
from django.contrib.auth.hashers import make_password
from django.conf import settings
from django.db import migrations, models
from django.contrib.auth.models import Group

def link_user_account(apps, schema_editor):
    User = get_user_model()
    SU_Staff = apps.get_model('su_staffs', 'SU_Staff')
    su_staffs = SU_Staff.objects.all()
    su_staff_group = Group.objects.get(name='SU Staff Group')

    for su_staff in su_staffs:
        # Generate the username and password
        username = su_staff.staff_id
        password = 'init' + su_staff.staff_id
                # Create a new User object
        try:
            user = User(
                username=username,
                password=make_password(password),
                is_active=True,
				is_staff = True,
            )
            user.save()
            user.groups.set([su_staff_group], clear=True)
            user.save()
        except Exception as e:
            print(f"An error occurred at user: {e}")

    users = User.objects.all()
    for user in users:
        username = user.get_username()
        try:
            staff_model = SU_Staff.objects.get(staff_id=username)
            staff_model.user = user
            staff_model.save()
            print(f"Successfully linked User '{user}' with SU_Staff '{staff_model}'")
        except User.DoesNotExist:
            print(f"User '{user}' does not exist")
        except SU_Staff.DoesNotExist:
            print(f"SU_Staff with staff_id '{username}' does not exist")
        except Exception as e:
            print(f"An error occurred: {e}")



class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('users', '0007_alter_user_cv_alter_user_profile_image'),
    ]

    operations = [
        migrations.RunPython(link_user_account),
    ]
